// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.0
// source: sentryflow_metrics.proto

package protobuf

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SentryFlowMetrics_GetAPIClassification_FullMethodName = "/protobuf.SentryFlowMetrics/GetAPIClassification"
)

// SentryFlowMetricsClient is the client API for SentryFlowMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SentryFlowMetricsClient interface {
	GetAPIClassification(ctx context.Context, opts ...grpc.CallOption) (SentryFlowMetrics_GetAPIClassificationClient, error)
}

type sentryFlowMetricsClient struct {
	cc grpc.ClientConnInterface
}

func NewSentryFlowMetricsClient(cc grpc.ClientConnInterface) SentryFlowMetricsClient {
	return &sentryFlowMetricsClient{cc}
}

func (c *sentryFlowMetricsClient) GetAPIClassification(ctx context.Context, opts ...grpc.CallOption) (SentryFlowMetrics_GetAPIClassificationClient, error) {
	stream, err := c.cc.NewStream(ctx, &SentryFlowMetrics_ServiceDesc.Streams[0], SentryFlowMetrics_GetAPIClassification_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &sentryFlowMetricsGetAPIClassificationClient{stream}
	return x, nil
}

type SentryFlowMetrics_GetAPIClassificationClient interface {
	Send(*APIClassificationRequest) error
	Recv() (*APIClassificationResponse, error)
	grpc.ClientStream
}

type sentryFlowMetricsGetAPIClassificationClient struct {
	grpc.ClientStream
}

func (x *sentryFlowMetricsGetAPIClassificationClient) Send(m *APIClassificationRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sentryFlowMetricsGetAPIClassificationClient) Recv() (*APIClassificationResponse, error) {
	m := new(APIClassificationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SentryFlowMetricsServer is the server API for SentryFlowMetrics service.
// All implementations should embed UnimplementedSentryFlowMetricsServer
// for forward compatibility
type SentryFlowMetricsServer interface {
	GetAPIClassification(SentryFlowMetrics_GetAPIClassificationServer) error
}

// UnimplementedSentryFlowMetricsServer should be embedded to have forward compatible implementations.
type UnimplementedSentryFlowMetricsServer struct {
}

func (UnimplementedSentryFlowMetricsServer) GetAPIClassification(SentryFlowMetrics_GetAPIClassificationServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAPIClassification not implemented")
}

// UnsafeSentryFlowMetricsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SentryFlowMetricsServer will
// result in compilation errors.
type UnsafeSentryFlowMetricsServer interface {
	mustEmbedUnimplementedSentryFlowMetricsServer()
}

func RegisterSentryFlowMetricsServer(s grpc.ServiceRegistrar, srv SentryFlowMetricsServer) {
	s.RegisterService(&SentryFlowMetrics_ServiceDesc, srv)
}

func _SentryFlowMetrics_GetAPIClassification_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SentryFlowMetricsServer).GetAPIClassification(&sentryFlowMetricsGetAPIClassificationServer{stream})
}

type SentryFlowMetrics_GetAPIClassificationServer interface {
	Send(*APIClassificationResponse) error
	Recv() (*APIClassificationRequest, error)
	grpc.ServerStream
}

type sentryFlowMetricsGetAPIClassificationServer struct {
	grpc.ServerStream
}

func (x *sentryFlowMetricsGetAPIClassificationServer) Send(m *APIClassificationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sentryFlowMetricsGetAPIClassificationServer) Recv() (*APIClassificationRequest, error) {
	m := new(APIClassificationRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SentryFlowMetrics_ServiceDesc is the grpc.ServiceDesc for SentryFlowMetrics service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SentryFlowMetrics_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.SentryFlowMetrics",
	HandlerType: (*SentryFlowMetricsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAPIClassification",
			Handler:       _SentryFlowMetrics_GetAPIClassification_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "sentryflow_metrics.proto",
}
