// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.0
// source: sentryflow.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName  string `protobuf:"bytes,1,opt,name=hostName,proto3" json:"hostName,omitempty"`
	IPAddress string `protobuf:"bytes,2,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentryflow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sentryflow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_sentryflow_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInfo) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *ClientInfo) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

type APILog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TimeStamp    string            `protobuf:"bytes,2,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	SrcNamespace string            `protobuf:"bytes,11,opt,name=srcNamespace,proto3" json:"srcNamespace,omitempty"`
	SrcName      string            `protobuf:"bytes,12,opt,name=srcName,proto3" json:"srcName,omitempty"`
	SrcLabel     map[string]string `protobuf:"bytes,13,rep,name=srcLabel,proto3" json:"srcLabel,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SrcType      string            `protobuf:"bytes,21,opt,name=srcType,proto3" json:"srcType,omitempty"`
	SrcIP        string            `protobuf:"bytes,22,opt,name=srcIP,proto3" json:"srcIP,omitempty"`
	SrcPort      string            `protobuf:"bytes,23,opt,name=srcPort,proto3" json:"srcPort,omitempty"`
	DstNamespace string            `protobuf:"bytes,31,opt,name=dstNamespace,proto3" json:"dstNamespace,omitempty"`
	DstName      string            `protobuf:"bytes,32,opt,name=dstName,proto3" json:"dstName,omitempty"`
	DstLabel     map[string]string `protobuf:"bytes,33,rep,name=dstLabel,proto3" json:"dstLabel,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DstType      string            `protobuf:"bytes,41,opt,name=dstType,proto3" json:"dstType,omitempty"`
	DstIP        string            `protobuf:"bytes,42,opt,name=dstIP,proto3" json:"dstIP,omitempty"`
	DstPort      string            `protobuf:"bytes,43,opt,name=dstPort,proto3" json:"dstPort,omitempty"`
	Protocol     string            `protobuf:"bytes,51,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Method       string            `protobuf:"bytes,52,opt,name=method,proto3" json:"method,omitempty"`
	Path         string            `protobuf:"bytes,53,opt,name=path,proto3" json:"path,omitempty"`
	ResponseCode int32             `protobuf:"varint,54,opt,name=responseCode,proto3" json:"responseCode,omitempty"`
}

func (x *APILog) Reset() {
	*x = APILog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentryflow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APILog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APILog) ProtoMessage() {}

func (x *APILog) ProtoReflect() protoreflect.Message {
	mi := &file_sentryflow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APILog.ProtoReflect.Descriptor instead.
func (*APILog) Descriptor() ([]byte, []int) {
	return file_sentryflow_proto_rawDescGZIP(), []int{1}
}

func (x *APILog) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *APILog) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *APILog) GetSrcNamespace() string {
	if x != nil {
		return x.SrcNamespace
	}
	return ""
}

func (x *APILog) GetSrcName() string {
	if x != nil {
		return x.SrcName
	}
	return ""
}

func (x *APILog) GetSrcLabel() map[string]string {
	if x != nil {
		return x.SrcLabel
	}
	return nil
}

func (x *APILog) GetSrcType() string {
	if x != nil {
		return x.SrcType
	}
	return ""
}

func (x *APILog) GetSrcIP() string {
	if x != nil {
		return x.SrcIP
	}
	return ""
}

func (x *APILog) GetSrcPort() string {
	if x != nil {
		return x.SrcPort
	}
	return ""
}

func (x *APILog) GetDstNamespace() string {
	if x != nil {
		return x.DstNamespace
	}
	return ""
}

func (x *APILog) GetDstName() string {
	if x != nil {
		return x.DstName
	}
	return ""
}

func (x *APILog) GetDstLabel() map[string]string {
	if x != nil {
		return x.DstLabel
	}
	return nil
}

func (x *APILog) GetDstType() string {
	if x != nil {
		return x.DstType
	}
	return ""
}

func (x *APILog) GetDstIP() string {
	if x != nil {
		return x.DstIP
	}
	return ""
}

func (x *APILog) GetDstPort() string {
	if x != nil {
		return x.DstPort
	}
	return ""
}

func (x *APILog) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *APILog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *APILog) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *APILog) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

type APIMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PerAPICounts map[string]uint64 `protobuf:"bytes,1,rep,name=perAPICounts,proto3" json:"perAPICounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // @todo: add some more metrics here
}

func (x *APIMetrics) Reset() {
	*x = APIMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentryflow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIMetrics) ProtoMessage() {}

func (x *APIMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_sentryflow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIMetrics.ProtoReflect.Descriptor instead.
func (*APIMetrics) Descriptor() ([]byte, []int) {
	return file_sentryflow_proto_rawDescGZIP(), []int{2}
}

func (x *APIMetrics) GetPerAPICounts() map[string]uint64 {
	if x != nil {
		return x.PerAPICounts
	}
	return nil
}

type MetricValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[string]string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetricValue) Reset() {
	*x = MetricValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentryflow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricValue) ProtoMessage() {}

func (x *MetricValue) ProtoReflect() protoreflect.Message {
	mi := &file_sentryflow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricValue.ProtoReflect.Descriptor instead.
func (*MetricValue) Descriptor() ([]byte, []int) {
	return file_sentryflow_proto_rawDescGZIP(), []int{3}
}

func (x *MetricValue) GetValue() map[string]string {
	if x != nil {
		return x.Value
	}
	return nil
}

type EnvoyMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp string                  `protobuf:"bytes,1,opt,name=timeStamp,proto3" json:"timeStamp,omitempty"`
	Namespace string                  `protobuf:"bytes,11,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string                  `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	IPAddress string                  `protobuf:"bytes,13,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`
	Labels    map[string]string       `protobuf:"bytes,14,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Metrics   map[string]*MetricValue `protobuf:"bytes,21,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EnvoyMetrics) Reset() {
	*x = EnvoyMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sentryflow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyMetrics) ProtoMessage() {}

func (x *EnvoyMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_sentryflow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyMetrics.ProtoReflect.Descriptor instead.
func (*EnvoyMetrics) Descriptor() ([]byte, []int) {
	return file_sentryflow_proto_rawDescGZIP(), []int{4}
}

func (x *EnvoyMetrics) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *EnvoyMetrics) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EnvoyMetrics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvoyMetrics) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *EnvoyMetrics) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *EnvoyMetrics) GetMetrics() map[string]*MetricValue {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_sentryflow_proto protoreflect.FileDescriptor

var file_sentryflow_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0x46, 0x0a, 0x0a,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xa4, 0x05, 0x0a, 0x06, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a,
	0x0c, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x73,
	0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x2e,
	0x53, 0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x72, 0x63, 0x49, 0x50, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x72, 0x63, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x72, 0x63, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3a, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x21, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x50, 0x49,
	0x4c, 0x6f, 0x67, 0x2e, 0x44, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x64, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x73, 0x74, 0x49, 0x50, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x73, 0x74, 0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x53, 0x72, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b,
	0x0a, 0x0d, 0x44, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99, 0x01, 0x0a, 0x0a,
	0x41, 0x50, 0x49, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x50, 0x49, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x50, 0x65, 0x72, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7f, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x38,
	0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x03, 0x0a, 0x0c, 0x45, 0x6e, 0x76,
	0x6f, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x50,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x15,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x76, 0x6f, 0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x51, 0x0a,
	0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x32, 0xc5, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x12,
	0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x50,
	0x49, 0x4c, 0x6f, 0x67, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x50, 0x49,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x50, 0x49, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x30, 0x01, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x6f,
	0x79, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x30, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x53, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x46, 0x6c, 0x6f, 0x77, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sentryflow_proto_rawDescOnce sync.Once
	file_sentryflow_proto_rawDescData = file_sentryflow_proto_rawDesc
)

func file_sentryflow_proto_rawDescGZIP() []byte {
	file_sentryflow_proto_rawDescOnce.Do(func() {
		file_sentryflow_proto_rawDescData = protoimpl.X.CompressGZIP(file_sentryflow_proto_rawDescData)
	})
	return file_sentryflow_proto_rawDescData
}

var file_sentryflow_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_sentryflow_proto_goTypes = []interface{}{
	(*ClientInfo)(nil),   // 0: protobuf.ClientInfo
	(*APILog)(nil),       // 1: protobuf.APILog
	(*APIMetrics)(nil),   // 2: protobuf.APIMetrics
	(*MetricValue)(nil),  // 3: protobuf.MetricValue
	(*EnvoyMetrics)(nil), // 4: protobuf.EnvoyMetrics
	nil,                  // 5: protobuf.APILog.SrcLabelEntry
	nil,                  // 6: protobuf.APILog.DstLabelEntry
	nil,                  // 7: protobuf.APIMetrics.PerAPICountsEntry
	nil,                  // 8: protobuf.MetricValue.ValueEntry
	nil,                  // 9: protobuf.EnvoyMetrics.LabelsEntry
	nil,                  // 10: protobuf.EnvoyMetrics.MetricsEntry
}
var file_sentryflow_proto_depIdxs = []int32{
	5,  // 0: protobuf.APILog.srcLabel:type_name -> protobuf.APILog.SrcLabelEntry
	6,  // 1: protobuf.APILog.dstLabel:type_name -> protobuf.APILog.DstLabelEntry
	7,  // 2: protobuf.APIMetrics.perAPICounts:type_name -> protobuf.APIMetrics.PerAPICountsEntry
	8,  // 3: protobuf.MetricValue.value:type_name -> protobuf.MetricValue.ValueEntry
	9,  // 4: protobuf.EnvoyMetrics.labels:type_name -> protobuf.EnvoyMetrics.LabelsEntry
	10, // 5: protobuf.EnvoyMetrics.metrics:type_name -> protobuf.EnvoyMetrics.MetricsEntry
	3,  // 6: protobuf.EnvoyMetrics.MetricsEntry.value:type_name -> protobuf.MetricValue
	0,  // 7: protobuf.SentryFlow.GetAPILog:input_type -> protobuf.ClientInfo
	0,  // 8: protobuf.SentryFlow.GetAPIMetrics:input_type -> protobuf.ClientInfo
	0,  // 9: protobuf.SentryFlow.GetEnvoyMetrics:input_type -> protobuf.ClientInfo
	1,  // 10: protobuf.SentryFlow.GetAPILog:output_type -> protobuf.APILog
	2,  // 11: protobuf.SentryFlow.GetAPIMetrics:output_type -> protobuf.APIMetrics
	4,  // 12: protobuf.SentryFlow.GetEnvoyMetrics:output_type -> protobuf.EnvoyMetrics
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_sentryflow_proto_init() }
func file_sentryflow_proto_init() {
	if File_sentryflow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sentryflow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentryflow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APILog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentryflow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentryflow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sentryflow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sentryflow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sentryflow_proto_goTypes,
		DependencyIndexes: file_sentryflow_proto_depIdxs,
		MessageInfos:      file_sentryflow_proto_msgTypes,
	}.Build()
	File_sentryflow_proto = out.File
	file_sentryflow_proto_rawDesc = nil
	file_sentryflow_proto_goTypes = nil
	file_sentryflow_proto_depIdxs = nil
}
