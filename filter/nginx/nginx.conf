load_module /etc/nginx/modules/ngx_http_js_module.so;

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    subrequest_output_buffer_size 8k;
    js_path "/etc/nginx/njs/";

    # Creates a 1MB shared memory dictionary to store key-value pairs
    # that can be accessed by multiple worker processes.
    # timeout: Specifies that key-value pairs will be removed after 60 seconds of inactivity.
    js_shared_dict_zone zone=apievents:1M timeout=60s evict;
    js_import main from sentryflow.js;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        location / {
	        js_body_filter main.requestHandler buffer_type=buffer;
            mirror      /mirror_request;
            mirror_request_body on;
        }

        location /mirror_request {
            # https://nginx.org/en/docs/http/ngx_http_core_module.html#internal
            internal;
	        js_content main.dispatchHttpCall;
        }

        location /sentryflow {
            # https://nginx.org/en/docs/http/ngx_http_core_module.html#internal
            internal;
            # SentryFlow URL with path to ingest access logs.
            proxy_pass http://192.168.64.1:8081/api/v1/events;
            proxy_method      POST;
            proxy_set_header accept "application/json";
            proxy_set_header Content-Type "application/json";
        }
    }
}
